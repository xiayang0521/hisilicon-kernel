name: Build

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install make imagemagick ttf-dejavu

      - name: Download toolchain
        run: |
          curl -L -O https://redirect.armbian.com/_toolchain/gcc-linaro-arm-none-eabi-4.8-2014.04_linux.tar.xz
          tar xvf ./gcc-linaro-arm-none-eabi-4.8-2014.04_linux.tar.xz

      - name: Build
        run: |
          export PATH="$PATH:$(pwd)/gcc-linaro-arm-none-eabi-4.8-2014.04_linux/bin"

          make distclean
          make m8b_onecloud_config
          make -j$(nproc)

      - name: Download AmlImg
        run: |
          ver="v0.3.0"
          curl -L -o ./AmlImg https://github.com/hzyitc/AmlImg/releases/download/$ver/AmlImg_${ver}_linux_amd64
          chmod +x ./AmlImg

      - name: Generate resource
        run: |
          mkdir -p resource

          convert \
            -size 640x360 \
            -background black \
            -gravity center -font "DejaVu-Sans" -pointsize 64 -fill white label:"U-Boot" \
            BMP3:resource/bootup.bmp

          cat <<EOF >resource/list.txt
          090000:bootup:bootup.bmp
          EOF
          ./AmlImg res_pack build/resource.img resource/

      - name: Generate eMMC burn image
        run: |
          mkdir -p pack

          cp build/ddr_init.bin pack/DDR.USB
          cp build/u-boot-comp.bin pack/UBOOT_COMP.USB

          cat <<EOF >pack/aml_sdc_burn.ini
          [common]
          erase_bootloader    = 1
          erase_flash         = 0
          reboot              = 0

          ;package will filled by sdacard burning tool
          [burn_ex]
          package     = aml_upgrade_package.img
          ;media       =
          EOF

          cat <<EOF >pack/platform.conf
          Platform:0x0801
          BinPara:0xd9010000
          DDRLoad:0xd9000000
          DDRRun:0xd9000030
          Uboot_down:0x200000
          Uboot_decomp:0xd9000030
          EOF

          cp build/u-boot.bin pack/bootloader.img
          echo -n "sha1sum $(sha1sum pack/bootloader.img | awk '{print $1}')" >pack/bootloader.VERIFY

          cp build/resource.img pack/resource.img
          echo -n "sha1sum $(sha1sum pack/resource.img | awk '{print $1}')" >pack/resource.VERIFY

          cat <<EOF >pack/commands.txt
          USB:DDR:normal:DDR.USB
          USB:UBOOT_COMP:normal:UBOOT_COMP.USB

          ini:aml_sdc_burn:normal:aml_sdc_burn.ini
          conf:platform:normal:platform.conf

          PARTITION:bootloader:normal:bootloader.img
          VERIFY:bootloader:normal:bootloader.VERIFY

          PARTITION:resource:normal:resource.img
          VERIFY:resource:normal:resource.VERIFY

          # PARTITION:boot:normal:boot.img
          # VERIFY:boot:normal:boot.VERIFY
          # PARTITION:rootfs:normal:rootfs.img
          # VERIFY:rootfs:normal:rootfs.VERIFY
          EOF

          ./AmlImg pack build/eMMC.burn.img pack/

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          path: |
            build/*.bin
            build/resource.img
            build/eMMC.burn.img

      - name: Release
        run: |
          time="${{ github.event.head_commit.timestamp }}"
          sha="${GITHUB_SHA:0:8}"
          tag="build-$(date +'%Y%m%d-%H%M' -d "$time")"
          message="Auto-Build $(date +'%Y-%m-%d %H:%M' -d "$time")"
          hub release create  -t "$GITHUB_SHA" "$tag" -m "$message" \
            $(for a in build/*.bin; do echo -a $a; done) \
            -a build/resource.img \
            -a build/eMMC.burn.img
        env:
          GITHUB_TOKEN: ${{ github.token }}
